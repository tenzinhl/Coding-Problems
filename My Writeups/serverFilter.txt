We have a server that handles requests for loading a resource.

The server can only handle so many requests within the given time windows,
any requests that exceed these limits will be dropped.

The filters are as follows (where t represents the time of the just received message):
  - No more than 3 messages in 1 second
  - No more than 20 messages in 10 seconds (ten second window is [max(1, t - 9), t])
  - No more than 60 messages in 60 seconds (60 second window is [max(1, t - 59), t]);

Given an array of times at which requests are received in ascending order,
return the number of dropped requests.

Ex:

[1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 11, 11, 11, 11]

first three 1's: don't drop, they're fine.
fourth 1: dropped, breaks rule 1
all the 2's through 6's: not dropped, don't break any of the rules

first 7: not dropped, this is the 20th message in within ten seconds. // (Note that it's the 20th message even though one of the 1's was dropped).

rest of the 7's: dropped, > 20 messages in ten seconds, fourth 7 also breaks rule 1.

First 11: ten second window now only goes from [2, 11], so this first 11 actually passes all of the rules and is NOT dropped.

Rest of the 11's: break the second rule, last 11 also breaks the first rule.
